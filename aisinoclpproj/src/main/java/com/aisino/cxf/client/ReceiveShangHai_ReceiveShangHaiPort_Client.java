
package com.aisino.cxf.client;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.2.12
 * Wed Apr 09 11:11:59 GMT+08:00 2014
 * Generated source version: 2.2.12
 * 
 */

public final class ReceiveShangHai_ReceiveShangHaiPort_Client {

    private static final QName SERVICE_NAME = new QName("http://www.jd.com", "ReceiveShangHaiService");

    private ReceiveShangHai_ReceiveShangHaiPort_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = ReceiveShangHaiService.WSDL_LOCATION;
        if (args.length > 0) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        ReceiveShangHaiService ss = new ReceiveShangHaiService(wsdlURL, SERVICE_NAME);
        ReceiveShangHai port = ss.getReceiveShangHaiPort();  
        
        {
        System.out.println("Invoking getHashTime...");
        Long _getHashTime_arg0 = null;
        EiActualBill _getHashTime__return = port.getHashTime(_getHashTime_arg0);
        System.out.println("getHashTime.result=" + _getHashTime__return);


        }
        {
        System.out.println("Invoking receive...");
        String _receive_invoiceXml = "";
        String _receive__return = port.receive(_receive_invoiceXml);
        System.out.println("receive.result=" + _receive__return);


        }

        System.exit(0);
    }

}
